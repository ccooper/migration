# The overall plan for OS X is this:
#
#  * Get all builds, including opt, running in TC at tier 2
#  * Using try or date, green up tests/talos on those builds via BBB
#  * Switch the TC builds and BB-via-BBB tests to tier 1; this starts the
#    6-12 week beta clock
#  * Deploy a taskcluster worker to a small portion of the buildslaves
#  * Using try or date, green up tests using those taskcluster workers
#  * Deploy to the remainder of the buildslaves, converting suite by suite
#    to manage the load across the split pool of hardware, until 100% TC
#
# Tests and Talos travel together here.  Although they may present different
# problems, from the deployment perspective they are the same and share the
# same hardware pool.

macosx-debug-tier2:
    title: "Run Mac debug builds at tier 2"
    description: |
        Run tests via BBB on debug builds produced in Taskcluster, immediately
        disabling tests on the builds produced in Buildbot (for capacity
        reasons; potentially disabling those builds soon after).  The tests
        will be converte to run directly via taskcluster-worker later, after
        going to tier 1.
    assigned: wcosta
    bug: 1330310

macosx-builds-tier2:
    title: "Support macosx builds, tier2"
    dependencies:
        - macosx-debug-tier2
        - separate-make-check

macosx-universal-builds:
    title: "Support cross-compiler generation of universal builds.  Or drop need for universal builds"
    description: |
        We may need these jobs if we choose to release ESR52 from TaskCluster, or if the deprecation of
        32-bit OS X builds is not complete in time.
    bug: 1183613
    done: true

macosx-startup-cache:
    title: "Support or disable the startup cache for Mac builds"
    bug: 1314154
    duration: 20  # unless we decide not to care, in which case 1 :)
    description: |
        The startup cache is generated by starting the browser, which is
        impossible in a cross-compilation environment.  This work involves
        determining the impact of simply disabling startup-cache generation,
        and based on that information deciding whether to disable it for
        shipping builds or find a way to generate the startup cache within the
        build process.

macosx-single-locale-tier2:
    title: "Support single locale repacks for macosx"
    duration: 5
    dependencies:
        - macosx-builds-tier2

macosx-mach-repackage:
    title: "Separate packaging scripts from signing scripts, so that unsigned packages can be exploded and (re-)signed"
    assigned: kmoir
    duration: 5
    bug: 1287881

macosx-signing-tier2:
    title: "Implemnt macosx signing tasks for nightly builds on a project branch, using mach repackage"
    duration: 15
    dependencies:
        - macosx-builds-tier2
        - macosx-mach-repackage

macosx-balrog-tier2:
    title: "Implement balrog submission tasks for nightly Windows builds on a project branch"
    duration: 2
    dependencies:
        - macosx-builds-tier2
        - balrog-worker-impl

macosx-verify-signing-equivalence:
    # ask coop for details
    title: "Verify that the signature formats match those from BB builds"
    duration: 3
    dependencies:
        - macosx-signing-tier2

macosx-nightlies-tier2:
    title: "Land config for macosx nightly builds at tier2"
    bug: 1267425
    duration: 0
    dependencies:
        - macosx-single-locale-tier2
        - macosx-signing-tier2
        - macosx-balrog-tier2
        - nightly-beetmover-tier2

macosx-test-talos-via-bbb-green:
    title: "Green up MacOS X test and talos on TC builds via BBB in try"
    bug: 1184122
    duration: 10
    dependencies:
        - in-tree-bbb-support

macosx-asan-tier2:
    title: "Run macosx ASAN builds at tier 2"
    bug: 1209937
    duration: 15
    depenencies:
        macosx-builds-tier2

macosx-nightlies-manual-test:
    # this is update testing, possibly done by triggering some of QA's tests against a nightly made on date
    title: "Verify that the en-US+l10n nightlies and associated updated methods work via manual testing"
    duration: 3
    dependencies:
        - macosx-nightlies-tier2

macosx-verify-build-equivalence:
    title: "Verify TC-dervied builds are byte-for-byte equivalent to BB builds"
    duration: 5
    dependencies:
        - macosx-builds-tier2

macosx-all-tier1:
    # This is a "flag-day" moment where we simultaneously:
    #  * enable in-tree scheduling of test/talos tasks via BBB
    #  * disable sendchanges from Buildbot builds and demote to Tier 2
    #  * promote TC opt and nightly builds to tier 1
    title: "Promote all macosx builds to tier1; turn off macosx buildbot builds and nightlies; commit for beta in 6-12 weeks"
    duration: 5
    dependencies:
        - macosx-verify-build-equivalence
        - macosx-verify-signing-equivalence
        - macosx-asan-tier2
        - macosx-builds-tier2
        - macosx-nightlies-manual-test
        - macosx-nightlies-tier2
        - macosx-test-talos-via-bbb-green
        - macosx-universal-builds
        - macosx-startup-cache
        - pulse-actions-backfill
        - scriptworker-tier1
        - docker-worker-cot-gpg-keys-in-repo
        - taskcluster-worker-cot-gpg-keys-in-repo
        - make-check-ok-for-cross-compile

macosx-disable-bb-builds:
    title: "Turn off the MacOS X builds on Buildbot"
    dependencies:
        - macosx-all-tier1

macosx-taskcluster-worker:
    title: "Build a tc-worker engine for OS X"
    assigned: wcosta
    description: |
        Implement a taskcluster-worker engine that runs on OS X.  The remaining
        bit here is to support task cancellation.
    bug: 1244150

macosx-worker-deployment-hardware:
    title: "Build a method of deploying a worker for Mac OS X on hardware"
    description: |
        This involves deploying taskcluster worker on a small pool of macs, and
        running a few tests successfully.  With luck, we can keep running that
        small set of tests to ensure there is no backsliding (they stay green),
        but hardware resources may not allow that.  Remaining work here is to
        finalize and land the puppet patches to deploy this.
    assigned: dustin
    done: true
    bug: 1309197
    dependencies:
        - macosx-taskcluster-worker

macosx-test-talos-on-hardware-10pct:
    title: "Run MacOS X talos on TC on 10% of hardware"
    duration: 5
    dependencies:
        - taskcluster-worker-cancel-tasks
        - taskcluster-worker-setup-cleanup
        - macosx-worker-deployment-hardware
        - worker-priority-support
        - macosx-all-tier1

macosx-test-talos-on-hardware-green:
    title: "Green up MacOS X tests and talos on TC"
    assigned: rwood
    bug: 1298431
    duration: 5
    dependencies:
        - macosx-test-talos-on-hardware-10pct

macosx-test-talos-on-hardware-100pct:
    # This involves a gradual reimage while landing patches to switch
    # suite by suite to the taskcluster workers.  This will also require
    # jumping the trains to land this support on long-term branches, and
    # maybe holding a small number of hosts in reserve for ESR.
    title: "Run MacOS X tests and talos on TC on 100% of hardware"
    duration: 15
    dependencies:
        - macosx-test-talos-on-hardware-green

stop-bb-macosx-test-masters:
    title: "Turn off the MacOS X Test Buildmasters (except one for ESR)"
    dependencies:
        - macosx-test-talos-on-hardware-100pct

macosx-beta-release:
    title: "Ship macosx beta release"
    dependencies:
        - macosx-nightlies-manual-test
        - macosx-all-tier1

macosx-release:
    title: "Ship macosx release"
    dependencies:
        - macosx-beta-release
